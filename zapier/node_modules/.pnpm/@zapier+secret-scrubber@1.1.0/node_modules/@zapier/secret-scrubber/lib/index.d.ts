declare type Scrubbable = string | any[] | object;
/**
 * The easiest way to censor data - pass anything in along with a list of sensitive strings, and we'll handle the rest.
 */
export declare const scrub: <T extends Scrubbable>(input: T, secretValues: Array<string | number>) => T;
/**
 * A convenience function to find potentially sensitive data in objects. It grabs:
 *
 * * any value tied to a typically sensitive key (such as `authorization` or `password`)
 * * any url (regardless of key) that has auth info or a querystring
 */
export declare const findSensitiveValues: (obj: object | any[]) => string[];
export { recurseExtract } from './utils';
