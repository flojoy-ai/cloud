// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { userId, type UserId } from './User';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

/** Identifier type for public.user_session */
export type UserSessionId = string & { __brand: 'UserSessionId' };

/** Represents the table public.user_session */
export default interface UserSessionTable {
  id: ColumnType<UserSessionId, UserSessionId, UserSessionId>;

  user_id: ColumnType<UserId, UserId, UserId>;

  expires_at: ColumnType<Date, Date | string, Date | string>;
}

export const userSessionId = z.string() as unknown as z.Schema<UserSessionId>;

export const userSession = z.object({
  id: userSessionId,
  user_id: userId,
  expires_at: z.date(),
}) as unknown as z.Schema<UserSession>;

export const userSessionInitializer = z.object({
  id: userSessionId,
  user_id: userId,
  expires_at: z.date(),
}) as unknown as z.Schema<UserSessionInitializer>;

export const userSessionMutator = z.object({
  id: userSessionId.optional(),
  user_id: userId.optional(),
  expires_at: z.date().optional(),
}) as unknown as z.Schema<UserSessionMutator>;

export type UserSession = Selectable<UserSessionTable>;

export type NewUserSession = Insertable<UserSessionTable>;

export type UserSessionUpdate = Updateable<UserSessionTable>;
