// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { planType, type default as PlanType } from './PlanType';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

/** Identifier type for public.workspace */
export type WorkspaceId = string & { __brand: 'WorkspaceId' };

/** Represents the table public.workspace */
export default interface WorkspaceTable {
  /** Database type: pg_catalog.text */
  Id: ColumnType<WorkspaceId, WorkspaceId, WorkspaceId>;

  /** Database type: pg_catalog.text */
  Name: ColumnType<string, string, string>;

  /** Database type: pg_catalog.text */
  Namespace: ColumnType<string, string, string>;

  /** Database type: public.plan_type */
  PlanType: ColumnType<PlanType, PlanType, PlanType>;

  /** Database type: pg_catalog.timestamptz */
  CreatedAt: ColumnType<Date, Date | string | undefined, Date | string>;

  /** Database type: pg_catalog.timestamptz */
  UpdatedAt: ColumnType<Date, Date | string | undefined, Date | string>;
}

export type Workspace = Selectable<WorkspaceTable>;

export type NewWorkspace = Insertable<WorkspaceTable>;

export type WorkspaceUpdate = Updateable<WorkspaceTable>;

export const workspaceId = z.string();

export const workspace = z.object({
  Id: workspaceId,
  Name: z.string(),
  Namespace: z.string(),
  PlanType: planType,
  CreatedAt: z.date(),
  UpdatedAt: z.date(),
});

export const workspaceInitializer = z.object({
  Id: workspaceId,
  Name: z.string(),
  Namespace: z.string(),
  PlanType: planType,
  CreatedAt: z.date().optional(),
  UpdatedAt: z.date().optional(),
});

export const workspaceMutator = z.object({
  Id: workspaceId.optional(),
  Name: z.string().optional(),
  Namespace: z.string().optional(),
  PlanType: planType.optional(),
  CreatedAt: z.date().optional(),
  UpdatedAt: z.date().optional(),
});
