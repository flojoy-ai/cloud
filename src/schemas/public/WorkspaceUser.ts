// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { userId, type UserId } from './User';
import { workspaceId, type WorkspaceId } from './Workspace';
import { workspaceRole, type default as WorkspaceRole } from './WorkspaceRole';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

/** Represents the table public.workspace_user */
export default interface WorkspaceUserTable {
  /** Database type: pg_catalog.text */
  UserId: ColumnType<UserId, UserId, UserId>;

  /** Database type: pg_catalog.text */
  WorkspaceId: ColumnType<WorkspaceId, WorkspaceId, WorkspaceId>;

  /** Database type: public.workspace_role */
  Role: ColumnType<WorkspaceRole, WorkspaceRole, WorkspaceRole>;

  /** Database type: pg_catalog.timestamptz */
  CreatedAt: ColumnType<Date, Date | string | undefined, Date | string>;
}

export type WorkspaceUser = Selectable<WorkspaceUserTable>;

export type NewWorkspaceUser = Insertable<WorkspaceUserTable>;

export type WorkspaceUserUpdate = Updateable<WorkspaceUserTable>;

export const workspaceUser = z.object({
  UserId: userId,
  WorkspaceId: workspaceId,
  Role: workspaceRole,
  CreatedAt: z.date(),
});

export const workspaceUserInitializer = z.object({
  UserId: userId,
  WorkspaceId: workspaceId,
  Role: workspaceRole,
  CreatedAt: z.date().optional(),
});

export const workspaceUserMutator = z.object({
  UserId: userId.optional(),
  WorkspaceId: workspaceId.optional(),
  Role: workspaceRole.optional(),
  CreatedAt: z.date().optional(),
});
