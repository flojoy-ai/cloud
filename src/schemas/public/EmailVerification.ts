// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { userId, type UserId } from './User';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

/** Identifier type for public.email_verification */
export type EmailVerificationId = string & { __brand: 'EmailVerificationId' };

/** Represents the table public.email_verification */
export default interface EmailVerificationTable {
  /** Database type: pg_catalog.text */
  Id: ColumnType<EmailVerificationId, EmailVerificationId, EmailVerificationId>;

  /** Database type: pg_catalog.text */
  Code: ColumnType<string, string, string>;

  /** Database type: pg_catalog.text */
  UserId: ColumnType<UserId, UserId, UserId>;

  /** Database type: pg_catalog.text */
  Email: ColumnType<string, string, string>;

  /** Database type: pg_catalog.timestamptz */
  ExpiresAt: ColumnType<Date, Date | string, Date | string>;
}

export type EmailVerification = Selectable<EmailVerificationTable>;

export type NewEmailVerification = Insertable<EmailVerificationTable>;

export type EmailVerificationUpdate = Updateable<EmailVerificationTable>;

export const emailVerificationId = z.string();

export const emailVerification = z.object({
  Id: emailVerificationId,
  Code: z.string(),
  UserId: userId,
  Email: z.string(),
  ExpiresAt: z.date(),
});

export const emailVerificationInitializer = z.object({
  Id: emailVerificationId,
  Code: z.string(),
  UserId: userId,
  Email: z.string(),
  ExpiresAt: z.date(),
});

export const emailVerificationMutator = z.object({
  Id: emailVerificationId.optional(),
  Code: z.string().optional(),
  UserId: userId.optional(),
  Email: z.string().optional(),
  ExpiresAt: z.date().optional(),
});
