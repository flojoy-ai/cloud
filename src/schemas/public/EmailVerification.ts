// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { userId, type UserId } from './User';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

/** Identifier type for public.email_verification */
export type EmailVerificationId = string & { __brand: 'EmailVerificationId' };

/** Represents the table public.email_verification */
export default interface EmailVerificationTable {
  id: ColumnType<EmailVerificationId, EmailVerificationId, EmailVerificationId>;

  code: ColumnType<string, string, string>;

  user_id: ColumnType<UserId, UserId, UserId>;

  email: ColumnType<string, string, string>;

  expires_at: ColumnType<Date, Date | string, Date | string>;
}

export const emailVerificationId = z.string() as unknown as z.Schema<EmailVerificationId>;

export const emailVerification = z.object({
  id: emailVerificationId,
  code: z.string(),
  user_id: userId,
  email: z.string(),
  expires_at: z.date(),
}) as unknown as z.Schema<EmailVerification>;

export const emailVerificationInitializer = z.object({
  id: emailVerificationId,
  code: z.string(),
  user_id: userId,
  email: z.string(),
  expires_at: z.date(),
}) as unknown as z.Schema<EmailVerificationInitializer>;

export const emailVerificationMutator = z.object({
  id: emailVerificationId.optional(),
  code: z.string().optional(),
  user_id: userId.optional(),
  email: z.string().optional(),
  expires_at: z.date().optional(),
}) as unknown as z.Schema<EmailVerificationMutator>;

export type EmailVerification = Selectable<EmailVerificationTable>;

export type NewEmailVerification = Insertable<EmailVerificationTable>;

export type EmailVerificationUpdate = Updateable<EmailVerificationTable>;
