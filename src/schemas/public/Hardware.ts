// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { workspaceId, type WorkspaceId } from './Workspace';
import { modelId, type ModelId } from './Model';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

/** Identifier type for public.hardware */
export type HardwareId = string & { __brand: 'HardwareId' };

/** Represents the table public.hardware */
export default interface HardwareTable {
  id: ColumnType<HardwareId, HardwareId, HardwareId>;

  name: ColumnType<string, string, string>;

  workspace_id: ColumnType<WorkspaceId, WorkspaceId, WorkspaceId>;

  model_id: ColumnType<ModelId, ModelId, ModelId>;

  created_at: ColumnType<Date, Date | string | undefined, Date | string>;

  updated_at: ColumnType<Date, Date | string | undefined, Date | string>;
}

export const hardwareId = z.string() as unknown as z.Schema<HardwareId>;

export const hardware = z.object({
  id: hardwareId,
  name: z.string(),
  workspace_id: workspaceId,
  model_id: modelId,
  created_at: z.date(),
  updated_at: z.date(),
}) as unknown as z.Schema<Hardware>;

export const hardwareInitializer = z.object({
  id: hardwareId,
  name: z.string(),
  workspace_id: workspaceId,
  model_id: modelId,
  created_at: z.date().optional(),
  updated_at: z.date().optional(),
}) as unknown as z.Schema<HardwareInitializer>;

export const hardwareMutator = z.object({
  id: hardwareId.optional(),
  name: z.string().optional(),
  workspace_id: workspaceId.optional(),
  model_id: modelId.optional(),
  created_at: z.date().optional(),
  updated_at: z.date().optional(),
}) as unknown as z.Schema<HardwareMutator>;

export type Hardware = Selectable<HardwareTable>;

export type NewHardware = Insertable<HardwareTable>;

export type HardwareUpdate = Updateable<HardwareTable>;
