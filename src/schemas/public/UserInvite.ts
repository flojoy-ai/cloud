// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { workspaceId, type WorkspaceId } from './Workspace';
import { workspaceRole, type default as WorkspaceRole } from './WorkspaceRole';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

/** Identifier type for public.user_invite */
export type UserInviteId = string & { __brand: 'UserInviteId' };

/** Represents the table public.user_invite */
export default interface UserInviteTable {
  /** Database type: pg_catalog.text */
  Id: ColumnType<UserInviteId, UserInviteId, UserInviteId>;

  /** Database type: pg_catalog.text */
  Email: ColumnType<string, string, string>;

  /** Database type: pg_catalog.text */
  WorkspaceId: ColumnType<WorkspaceId, WorkspaceId, WorkspaceId>;

  /** Database type: public.workspace_role */
  Role: ColumnType<WorkspaceRole, WorkspaceRole, WorkspaceRole>;
}

export type UserInvite = Selectable<UserInviteTable>;

export type NewUserInvite = Insertable<UserInviteTable>;

export type UserInviteUpdate = Updateable<UserInviteTable>;

export const userInviteId = z.string();

export const userInvite = z.object({
  Id: userInviteId,
  Email: z.string(),
  WorkspaceId: workspaceId,
  Role: workspaceRole,
});

export const userInviteInitializer = z.object({
  Id: userInviteId,
  Email: z.string(),
  WorkspaceId: workspaceId,
  Role: workspaceRole,
});

export const userInviteMutator = z.object({
  Id: userInviteId.optional(),
  Email: z.string().optional(),
  WorkspaceId: workspaceId.optional(),
  Role: workspaceRole.optional(),
});
