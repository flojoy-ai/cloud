// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { workspaceId, type WorkspaceId } from './Workspace';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

/** Identifier type for public.model */
export type ModelId = string & { __brand: 'ModelId' };

/** Represents the table public.model */
export default interface ModelTable {
  id: ColumnType<ModelId, ModelId, ModelId>;

  name: ColumnType<string, string, string>;

  workspace_id: ColumnType<WorkspaceId, WorkspaceId, WorkspaceId>;

  created_at: ColumnType<Date, Date | string | undefined, Date | string>;
}

export const modelId = z.string() as unknown as z.Schema<ModelId>;

export const model = z.object({
  id: modelId,
  name: z.string(),
  workspace_id: workspaceId,
  created_at: z.date(),
}) as unknown as z.Schema<Model>;

export const modelInitializer = z.object({
  id: modelId,
  name: z.string(),
  workspace_id: workspaceId,
  created_at: z.date().optional(),
}) as unknown as z.Schema<ModelInitializer>;

export const modelMutator = z.object({
  id: modelId.optional(),
  name: z.string().optional(),
  workspace_id: workspaceId.optional(),
  created_at: z.date().optional(),
}) as unknown as z.Schema<ModelMutator>;

export type Model = Selectable<ModelTable>;

export type NewModel = Insertable<ModelTable>;

export type ModelUpdate = Updateable<ModelTable>;
