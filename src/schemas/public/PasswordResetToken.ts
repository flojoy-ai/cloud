// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { userId, type UserId } from './User';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

export type PasswordResetTokenId = string;

/** Represents the table public.password_reset_token */
export default interface PasswordResetTokenTable {
  /** Database type: pg_catalog.text */
  id: ColumnType<PasswordResetTokenId, PasswordResetTokenId, PasswordResetTokenId>;

  /** Database type: pg_catalog.text */
  userId: ColumnType<UserId, UserId, UserId>;

  /** Database type: pg_catalog.text */
  token: ColumnType<string, string, string>;

  /** Database type: pg_catalog.timestamptz */
  expiresAt: ColumnType<Date, Date | string, Date | string>;
}

export type PasswordResetToken = Selectable<PasswordResetTokenTable>;

export type NewPasswordResetToken = Insertable<PasswordResetTokenTable>;

export type PasswordResetTokenUpdate = Updateable<PasswordResetTokenTable>;

export const passwordResetTokenId = z.string();

export const passwordResetToken = z.object({
  id: passwordResetTokenId,
  userId: userId,
  token: z.string(),
  expiresAt: z.date(),
});

export const passwordResetTokenInitializer = z.object({
  id: passwordResetTokenId,
  userId: userId,
  token: z.string(),
  expiresAt: z.date(),
});

export const passwordResetTokenMutator = z.object({
  id: passwordResetTokenId.optional(),
  userId: userId.optional(),
  token: z.string().optional(),
  expiresAt: z.date().optional(),
});
