// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { workspaceId, type WorkspaceId } from './Workspace';
import { modelId, type ModelId } from './Model';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

/** Identifier type for public.project */
export type ProjectId = string & { __brand: 'ProjectId' };

/** Represents the table public.project */
export default interface ProjectTable {
  id: ColumnType<ProjectId, ProjectId, ProjectId>;

  name: ColumnType<string, string, string>;

  workspace_id: ColumnType<WorkspaceId, WorkspaceId, WorkspaceId>;

  model_id: ColumnType<ModelId, ModelId, ModelId>;

  created_at: ColumnType<Date, Date | string | undefined, Date | string>;

  updated_at: ColumnType<Date, Date | string | undefined, Date | string>;
}

export type Project = Selectable<ProjectTable>;

export type NewProject = Insertable<ProjectTable>;

export type ProjectUpdate = Updateable<ProjectTable>;

export const projectId = z.string();

export const project = z.object({
  id: projectId,
  name: z.string(),
  workspace_id: workspaceId,
  model_id: modelId,
  created_at: z.date(),
  updated_at: z.date(),
});

export const projectInitializer = z.object({
  id: projectId,
  name: z.string(),
  workspace_id: workspaceId,
  model_id: modelId,
  created_at: z.date().optional(),
  updated_at: z.date().optional(),
});

export const projectMutator = z.object({
  id: projectId.optional(),
  name: z.string().optional(),
  workspace_id: workspaceId.optional(),
  model_id: modelId.optional(),
  created_at: z.date().optional(),
  updated_at: z.date().optional(),
});
