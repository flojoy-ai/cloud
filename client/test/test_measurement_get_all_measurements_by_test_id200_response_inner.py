# coding: utf-8

"""
    Flojoy Cloud API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.measurement_get_all_measurements_by_test_id200_response_inner import MeasurementGetAllMeasurementsByTestId200ResponseInner

class TestMeasurementGetAllMeasurementsByTestId200ResponseInner(unittest.TestCase):
    """MeasurementGetAllMeasurementsByTestId200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MeasurementGetAllMeasurementsByTestId200ResponseInner:
        """Test MeasurementGetAllMeasurementsByTestId200ResponseInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MeasurementGetAllMeasurementsByTestId200ResponseInner`
        """
        model = MeasurementGetAllMeasurementsByTestId200ResponseInner()
        if include_optional:
            return MeasurementGetAllMeasurementsByTestId200ResponseInner(
                is_deleted = True,
                data = None,
                device_id = '',
                id = '',
                measurement_type = 'boolean',
                name = '',
                storage_provider = 's3',
                test_id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                device = openapi_client.models.test_get_test_by_id_200_response_measurements_inner_device.test_getTestById_200_response_measurements_inner_device(
                    id = '', 
                    name = '', 
                    project_id = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
            )
        else:
            return MeasurementGetAllMeasurementsByTestId200ResponseInner(
                is_deleted = True,
                data = None,
                device_id = '',
                id = '',
                measurement_type = 'boolean',
                name = '',
                storage_provider = 's3',
                test_id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                device = openapi_client.models.test_get_test_by_id_200_response_measurements_inner_device.test_getTestById_200_response_measurements_inner_device(
                    id = '', 
                    name = '', 
                    project_id = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
        )
        """

    def testMeasurementGetAllMeasurementsByTestId200ResponseInner(self):
        """Test MeasurementGetAllMeasurementsByTestId200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
