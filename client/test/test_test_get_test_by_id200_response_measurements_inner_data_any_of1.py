# coding: utf-8

"""
    Flojoy Cloud API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.test_get_test_by_id200_response_measurements_inner_data_any_of1 import TestGetTestById200ResponseMeasurementsInnerDataAnyOf1

class TestTestGetTestById200ResponseMeasurementsInnerDataAnyOf1(unittest.TestCase):
    """TestGetTestById200ResponseMeasurementsInnerDataAnyOf1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TestGetTestById200ResponseMeasurementsInnerDataAnyOf1:
        """Test TestGetTestById200ResponseMeasurementsInnerDataAnyOf1
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TestGetTestById200ResponseMeasurementsInnerDataAnyOf1`
        """
        model = TestGetTestById200ResponseMeasurementsInnerDataAnyOf1()
        if include_optional:
            return TestGetTestById200ResponseMeasurementsInnerDataAnyOf1(
                type = 'dataframe',
                dataframe = {
                    'key' : [
                        1.337
                        ]
                    }
            )
        else:
            return TestGetTestById200ResponseMeasurementsInnerDataAnyOf1(
                type = 'dataframe',
                dataframe = {
                    'key' : [
                        1.337
                        ]
                    },
        )
        """

    def testTestGetTestById200ResponseMeasurementsInnerDataAnyOf1(self):
        """Test TestGetTestById200ResponseMeasurementsInnerDataAnyOf1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
