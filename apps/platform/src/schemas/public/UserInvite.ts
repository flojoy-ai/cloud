// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { workspaceId, type WorkspaceId } from "./Workspace";
import { workspaceRole, type default as WorkspaceRole } from "./WorkspaceRole";
import {
  type ColumnType,
  type Selectable,
  type Insertable,
  type Updateable,
} from "kysely";
import { z } from "zod";

export type UserInviteId = string;

/** Represents the table public.user_invite */
export default interface UserInviteTable {
  /** Database type: pg_catalog.text */
  id: ColumnType<UserInviteId, UserInviteId, UserInviteId>;

  /** Database type: pg_catalog.text */
  email: ColumnType<string, string, string>;

  /** Database type: pg_catalog.text */
  workspaceId: ColumnType<WorkspaceId, WorkspaceId, WorkspaceId>;

  /** Database type: public.workspace_role */
  role: ColumnType<WorkspaceRole, WorkspaceRole, WorkspaceRole>;
}

export type UserInvite = Selectable<UserInviteTable>;

export type NewUserInvite = Insertable<UserInviteTable>;

export type UserInviteUpdate = Updateable<UserInviteTable>;

export const userInviteId = z.string();

export const userInvite = z.object({
  id: userInviteId,
  email: z.string(),
  workspaceId: workspaceId,
  role: workspaceRole,
});

export const userInviteInitializer = z.object({
  id: userInviteId,
  email: z.string(),
  workspaceId: workspaceId,
  role: workspaceRole,
});

export const userInviteMutator = z.object({
  id: userInviteId.optional(),
  email: z.string().optional(),
  workspaceId: workspaceId.optional(),
  role: workspaceRole.optional(),
});
