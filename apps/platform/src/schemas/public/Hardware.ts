// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { workspaceId, type WorkspaceId } from './Workspace';
import { modelId, type ModelId } from './Model';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

export type HardwareId = string;

/** Represents the table public.hardware */
export default interface HardwareTable {
  /** Database type: pg_catalog.text */
  id: ColumnType<HardwareId, HardwareId, HardwareId>;

  /** Database type: pg_catalog.text */
  name: ColumnType<string, string, string>;

  /** Database type: pg_catalog.text */
  workspaceId: ColumnType<WorkspaceId, WorkspaceId, WorkspaceId>;

  /** Database type: pg_catalog.text */
  modelId: ColumnType<ModelId, ModelId, ModelId>;

  /** Database type: pg_catalog.timestamptz */
  createdAt: ColumnType<Date, Date | string | undefined, Date | string>;

  /** Database type: pg_catalog.timestamptz */
  updatedAt: ColumnType<Date, Date | string | undefined, Date | string>;
}

export type Hardware = Selectable<HardwareTable>;

export type NewHardware = Insertable<HardwareTable>;

export type HardwareUpdate = Updateable<HardwareTable>;

export const hardwareId = z.string();

export const hardware = z.object({
  id: hardwareId,
  name: z.string(),
  workspaceId: workspaceId,
  modelId: modelId,
  createdAt: z.coerce.date(),
  updatedAt: z.coerce.date(),
});

export const hardwareInitializer = z.object({
  id: hardwareId,
  name: z.string(),
  workspaceId: workspaceId,
  modelId: modelId,
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
});

export const hardwareMutator = z.object({
  id: hardwareId.optional(),
  name: z.string().optional(),
  workspaceId: workspaceId.optional(),
  modelId: modelId.optional(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
});
