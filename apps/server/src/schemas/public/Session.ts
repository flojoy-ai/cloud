// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { hardwareId, type HardwareId } from './Hardware';
import { userId, type UserId } from './User';
import { projectId, type ProjectId } from './Project';
import { stationId, type StationId } from './Station';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

export type SessionId = string;

/** Represents the table public.session */
export default interface SessionTable {
  /** Database type: pg_catalog.text */
  id: ColumnType<SessionId, SessionId, SessionId>;

  /** Database type: pg_catalog.text */
  hardwareId: ColumnType<HardwareId, HardwareId, HardwareId>;

  /** Database type: pg_catalog.text */
  userId: ColumnType<UserId, UserId, UserId>;

  /** Database type: pg_catalog.text */
  projectId: ColumnType<ProjectId, ProjectId, ProjectId>;

  /** Database type: pg_catalog.text */
  stationId: ColumnType<StationId, StationId, StationId>;

  /** Database type: pg_catalog.text */
  commitHash: ColumnType<string | null, string | null, string | null>;

  /** Database type: pg_catalog.text */
  notes: ColumnType<string | null, string | null, string | null>;

  /** Database type: pg_catalog.timestamptz */
  createdAt: ColumnType<Date, Date | string | undefined, Date | string>;
}

export type Session = Selectable<SessionTable>;

export type NewSession = Insertable<SessionTable>;

export type SessionUpdate = Updateable<SessionTable>;

export const sessionId = z.string();

export const session = z.object({
  id: sessionId,
  hardwareId: hardwareId,
  userId: userId,
  projectId: projectId,
  stationId: stationId,
  commitHash: z.string().nullable(),
  notes: z.string().nullable(),
  createdAt: z.coerce.date(),
});

export const sessionInitializer = z.object({
  id: sessionId,
  hardwareId: hardwareId,
  userId: userId,
  projectId: projectId,
  stationId: stationId,
  commitHash: z.string().optional().nullable(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
});

export const sessionMutator = z.object({
  id: sessionId.optional(),
  hardwareId: hardwareId.optional(),
  userId: userId.optional(),
  projectId: projectId.optional(),
  stationId: stationId.optional(),
  commitHash: z.string().optional().nullable(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
});
