// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { workspaceId, type WorkspaceId } from './Workspace';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

export type StationId = string;

/** Represents the table public.station */
export default interface StationTable {
  /** Database type: pg_catalog.text */
  id: ColumnType<StationId, StationId, StationId>;

  /** Database type: pg_catalog.text */
  projectId: ColumnType<WorkspaceId, WorkspaceId, WorkspaceId>;

  /** Database type: pg_catalog.text */
  name: ColumnType<string, string, string>;

  /** Database type: pg_catalog.timestamptz */
  createdAt: ColumnType<Date, Date | string | undefined, Date | string>;
}

export type Station = Selectable<StationTable>;

export type NewStation = Insertable<StationTable>;

export type StationUpdate = Updateable<StationTable>;

export const stationId = z.string();

export const station = z.object({
  id: stationId,
  projectId: workspaceId,
  name: z.string(),
  createdAt: z.coerce.date(),
});

export const stationInitializer = z.object({
  id: stationId,
  projectId: workspaceId,
  name: z.string(),
  createdAt: z.coerce.date().optional(),
});

export const stationMutator = z.object({
  id: stationId.optional(),
  projectId: workspaceId.optional(),
  name: z.string().optional(),
  createdAt: z.coerce.date().optional(),
});
