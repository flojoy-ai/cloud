// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { workspaceId, type WorkspaceId } from './Workspace';
import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';
import { z } from 'zod';

export type ProductId = string;

/** Represents the table public.product */
export default interface ProductTable {
  /** Database type: pg_catalog.text */
  id: ColumnType<ProductId, ProductId, ProductId>;

  /** Database type: pg_catalog.text */
  workspaceId: ColumnType<WorkspaceId, WorkspaceId, WorkspaceId>;

  /** Database type: pg_catalog.text */
  name: ColumnType<string, string, string>;

  /** Database type: pg_catalog.text */
  description: ColumnType<string | null, string | null, string | null>;

  /** Database type: pg_catalog.timestamptz */
  createdAt: ColumnType<Date, Date | string | undefined, Date | string>;
}

export type Product = Selectable<ProductTable>;

export type NewProduct = Insertable<ProductTable>;

export type ProductUpdate = Updateable<ProductTable>;

export const productId = z.string();

export const product = z.object({
  id: productId,
  workspaceId: workspaceId,
  name: z.string(),
  description: z.string().nullable(),
  createdAt: z.coerce.date(),
});

export const productInitializer = z.object({
  id: productId,
  workspaceId: workspaceId,
  name: z.string(),
  description: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
});

export const productMutator = z.object({
  id: productId.optional(),
  workspaceId: workspaceId.optional(),
  name: z.string().optional(),
  description: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
});
